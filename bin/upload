#!/usr/bin/env ruby
# frozen_string_literal: true

start_time = Process.clock_gettime(Process::CLOCK_MONOTONIC)

require_relative "../config/application"

BUCKET_NAME     = ENV.fetch("BUCKET_NAME")
DISTRIBUTION_ID = ENV.fetch("DISTRIBUTION_ID")

puts "Uploading to #{BUCKET_NAME}"

Dir["out/**/*"].each do |filename|
  next if File.directory?(filename)
  next if filename.end_with?(".gz")
  system("gzip", "-9", filename)
end

s3 = Aws::S3::Client.new

Dir["out/**/*"].each do |filename|
  next if File.directory?(filename)
  Files.upload(filename: filename, client: s3, bucket: BUCKET_NAME)
end

Files.delete_stale(client: s3, bucket: BUCKET_NAME)

puts "Invalidating cache"

cloudfront = Aws::CloudFront::Client.new
cloudfront.create_invalidation({
  distribution_id: DISTRIBUTION_ID,
  invalidation_batch: {
    paths: {
      quantity: 1,
      items: ["/*"],
    },
    caller_reference: Time.now.to_i.to_s,
  },
})

puts "Uploaded in %.03f seconds" % (Process.clock_gettime(Process::CLOCK_MONOTONIC) - start_time).round(3)
